/*Location2409*//*Location2393*///2f3f001f-b0ab-cc4d-af59-f87b7792b412
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Lazinator tool, version 0.1.0.380
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable disable
namespace LazinatorTests.Examples.Structs
{/*Location2394*/
    using Lazinator.Attributes;/*Location2395*/
    using Lazinator.Buffers;/*Location2396*/
    using Lazinator.Core;/*Location2397*/
    using Lazinator.Exceptions;/*Location2398*/
    using Lazinator.Support;/*Location2399*/
    using Lazinator.Wrappers;/*Location2400*/
    using LazinatorCollections;/*Location2401*/
    using System;/*Location2402*/
    using System.Buffers;/*Location2403*/
    using System.Collections.Generic;/*Location2404*/
    using System.Diagnostics;/*Location2405*/
    using System.IO;/*Location2406*/
    using System.Linq;/*Location2407*/
    using System.Runtime.InteropServices;/*Location2408*/
    using static Lazinator.Core.LazinatorUtilities;
    
    [Autogenerated]
    public partial class SmallWrappersContainer : ILazinator
    {
        /*Location2410*/public bool IsStruct => false;
        
        /*Location2411*//* Property definitions */
        
        /*Location2412*/        protected int _ListWrappedBytes_ByteIndex;
        /*Location2413*/        protected int _WrappedBool_ByteIndex;
        /*Location2414*/        protected int _WrappedByte_ByteIndex;
        /*Location2415*/        protected int _WrappedChar_ByteIndex;
        /*Location2416*/        protected int _WrappedNullableBool_ByteIndex;
        /*Location2417*/        protected int _WrappedNullableByte_ByteIndex;
        /*Location2418*/        protected int _WrappedNullableChar_ByteIndex;
        /*Location2419*/        protected int _WrappedNullableSByte_ByteIndex;
        /*Location2420*/        protected int _WrappedSByte_ByteIndex;
        /*Location2421*/protected virtual int _ListWrappedBytes_ByteLength => _WrappedBool_ByteIndex - _ListWrappedBytes_ByteIndex;
        /*Location2422*/protected virtual int _WrappedBool_ByteLength => _WrappedByte_ByteIndex - _WrappedBool_ByteIndex;
        /*Location2423*/protected virtual int _WrappedByte_ByteLength => _WrappedChar_ByteIndex - _WrappedByte_ByteIndex;
        /*Location2424*/protected virtual int _WrappedChar_ByteLength => _WrappedNullableBool_ByteIndex - _WrappedChar_ByteIndex;
        /*Location2425*/protected virtual int _WrappedNullableBool_ByteLength => _WrappedNullableByte_ByteIndex - _WrappedNullableBool_ByteIndex;
        /*Location2426*/protected virtual int _WrappedNullableByte_ByteLength => _WrappedNullableChar_ByteIndex - _WrappedNullableByte_ByteIndex;
        /*Location2427*/protected virtual int _WrappedNullableChar_ByteLength => _WrappedNullableSByte_ByteIndex - _WrappedNullableChar_ByteIndex;
        /*Location2428*/protected virtual int _WrappedNullableSByte_ByteLength => _WrappedSByte_ByteIndex - _WrappedNullableSByte_ByteIndex;
        /*Location2429*/private int _SmallWrappersContainer_EndByteIndex;
        /*Location2430*/protected virtual int _WrappedSByte_ByteLength => _SmallWrappersContainer_EndByteIndex - _WrappedSByte_ByteIndex;
        
        /*Location2431*/
        protected LazinatorList<WByte> _ListWrappedBytes;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public LazinatorList<WByte> ListWrappedBytes
        {
            get
            {
                if (!_ListWrappedBytes_Accessed)
                {
                    Lazinate_ListWrappedBytes();
                } 
                return _ListWrappedBytes;
            }
            set
            {
                if (_ListWrappedBytes != null)
                {
                    _ListWrappedBytes.LazinatorParents = _ListWrappedBytes.LazinatorParents.WithRemoved(this);
                }
                if (value != null)
                {
                    value.LazinatorParents = value.LazinatorParents.WithAdded(this);
                }
                
                IsDirty = true;
                DescendantIsDirty = true;
                _ListWrappedBytes = value;
                _ListWrappedBytes_Accessed = true;
            }
        }
        protected bool _ListWrappedBytes_Accessed;
        private void Lazinate_ListWrappedBytes()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _ListWrappedBytes = null;
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _ListWrappedBytes_ByteIndex, _ListWrappedBytes_ByteLength, false, false, null);
                
                _ListWrappedBytes = DeserializationFactory.Instance.CreateBaseOrDerivedType(201, (c, p) => new LazinatorList<WByte>(c, p), childData, this); 
            }
            
            _ListWrappedBytes_Accessed = true;
        }
        
        /*Location2432*/
        protected WBool _WrappedBool;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WBool WrappedBool
        {
            get
            {
                if (!_WrappedBool_Accessed)
                {
                    Lazinate_WrappedBool();
                } 
                return _WrappedBool;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedBool = value;
                _WrappedBool_Accessed = true;
            }
        }
        protected bool _WrappedBool_Accessed;
        private void Lazinate_WrappedBool()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedBool = default(WBool);
                _WrappedBool.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedBool_ByteIndex, _WrappedBool_ByteLength, false, true, 1);
                _WrappedBool = new WBool()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedBool.DeserializeLazinator(childData);
            }
            
            _WrappedBool_Accessed = true;
        }
        
        /*Location2433*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WBool WrappedBool_Copy
        {
            get
            {
                if (!_WrappedBool_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WBool);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedBool_ByteIndex, _WrappedBool_ByteLength, false, true, 1);
                        var toReturn = new WBool();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedBool;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2434*/
        protected WByte _WrappedByte;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WByte WrappedByte
        {
            get
            {
                if (!_WrappedByte_Accessed)
                {
                    Lazinate_WrappedByte();
                } 
                return _WrappedByte;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedByte = value;
                _WrappedByte_Accessed = true;
            }
        }
        protected bool _WrappedByte_Accessed;
        private void Lazinate_WrappedByte()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedByte = default(WByte);
                _WrappedByte.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedByte_ByteIndex, _WrappedByte_ByteLength, false, true, 1);
                _WrappedByte = new WByte()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedByte.DeserializeLazinator(childData);
            }
            
            _WrappedByte_Accessed = true;
        }
        
        /*Location2435*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WByte WrappedByte_Copy
        {
            get
            {
                if (!_WrappedByte_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WByte);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedByte_ByteIndex, _WrappedByte_ByteLength, false, true, 1);
                        var toReturn = new WByte();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedByte;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2436*/
        protected WChar _WrappedChar;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WChar WrappedChar
        {
            get
            {
                if (!_WrappedChar_Accessed)
                {
                    Lazinate_WrappedChar();
                } 
                return _WrappedChar;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedChar = value;
                _WrappedChar_Accessed = true;
            }
        }
        protected bool _WrappedChar_Accessed;
        private void Lazinate_WrappedChar()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedChar = default(WChar);
                _WrappedChar.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedChar_ByteIndex, _WrappedChar_ByteLength, false, true, 2);
                _WrappedChar = new WChar()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedChar.DeserializeLazinator(childData);
            }
            
            _WrappedChar_Accessed = true;
        }
        
        /*Location2437*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WChar WrappedChar_Copy
        {
            get
            {
                if (!_WrappedChar_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WChar);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedChar_ByteIndex, _WrappedChar_ByteLength, false, true, 2);
                        var toReturn = new WChar();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedChar;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2438*/
        protected WNullableBool _WrappedNullableBool;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableBool WrappedNullableBool
        {
            get
            {
                if (!_WrappedNullableBool_Accessed)
                {
                    Lazinate_WrappedNullableBool();
                } 
                return _WrappedNullableBool;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedNullableBool = value;
                _WrappedNullableBool_Accessed = true;
            }
        }
        protected bool _WrappedNullableBool_Accessed;
        private void Lazinate_WrappedNullableBool()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedNullableBool = default(WNullableBool);
                _WrappedNullableBool.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableBool_ByteIndex, _WrappedNullableBool_ByteLength, false, true, 1);
                _WrappedNullableBool = new WNullableBool()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedNullableBool.DeserializeLazinator(childData);
            }
            
            _WrappedNullableBool_Accessed = true;
        }
        
        /*Location2439*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableBool WrappedNullableBool_Copy
        {
            get
            {
                if (!_WrappedNullableBool_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WNullableBool);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableBool_ByteIndex, _WrappedNullableBool_ByteLength, false, true, 1);
                        var toReturn = new WNullableBool();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedNullableBool;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2440*/
        protected WNullableByte _WrappedNullableByte;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableByte WrappedNullableByte
        {
            get
            {
                if (!_WrappedNullableByte_Accessed)
                {
                    Lazinate_WrappedNullableByte();
                } 
                return _WrappedNullableByte;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedNullableByte = value;
                _WrappedNullableByte_Accessed = true;
            }
        }
        protected bool _WrappedNullableByte_Accessed;
        private void Lazinate_WrappedNullableByte()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedNullableByte = default(WNullableByte);
                _WrappedNullableByte.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableByte_ByteIndex, _WrappedNullableByte_ByteLength, false, true, null);
                _WrappedNullableByte = new WNullableByte()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedNullableByte.DeserializeLazinator(childData);
            }
            
            _WrappedNullableByte_Accessed = true;
        }
        
        /*Location2441*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableByte WrappedNullableByte_Copy
        {
            get
            {
                if (!_WrappedNullableByte_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WNullableByte);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableByte_ByteIndex, _WrappedNullableByte_ByteLength, false, true, null);
                        var toReturn = new WNullableByte();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedNullableByte;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2442*/
        protected WNullableChar _WrappedNullableChar;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableChar WrappedNullableChar
        {
            get
            {
                if (!_WrappedNullableChar_Accessed)
                {
                    Lazinate_WrappedNullableChar();
                } 
                return _WrappedNullableChar;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedNullableChar = value;
                _WrappedNullableChar_Accessed = true;
            }
        }
        protected bool _WrappedNullableChar_Accessed;
        private void Lazinate_WrappedNullableChar()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedNullableChar = default(WNullableChar);
                _WrappedNullableChar.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableChar_ByteIndex, _WrappedNullableChar_ByteLength, false, true, null);
                _WrappedNullableChar = new WNullableChar()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedNullableChar.DeserializeLazinator(childData);
            }
            
            _WrappedNullableChar_Accessed = true;
        }
        
        /*Location2443*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableChar WrappedNullableChar_Copy
        {
            get
            {
                if (!_WrappedNullableChar_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WNullableChar);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableChar_ByteIndex, _WrappedNullableChar_ByteLength, false, true, null);
                        var toReturn = new WNullableChar();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedNullableChar;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2444*/
        protected WNullableSByte _WrappedNullableSByte;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableSByte WrappedNullableSByte
        {
            get
            {
                if (!_WrappedNullableSByte_Accessed)
                {
                    Lazinate_WrappedNullableSByte();
                } 
                return _WrappedNullableSByte;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedNullableSByte = value;
                _WrappedNullableSByte_Accessed = true;
            }
        }
        protected bool _WrappedNullableSByte_Accessed;
        private void Lazinate_WrappedNullableSByte()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedNullableSByte = default(WNullableSByte);
                _WrappedNullableSByte.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableSByte_ByteIndex, _WrappedNullableSByte_ByteLength, false, true, null);
                _WrappedNullableSByte = new WNullableSByte()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedNullableSByte.DeserializeLazinator(childData);
            }
            
            _WrappedNullableSByte_Accessed = true;
        }
        
        /*Location2445*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WNullableSByte WrappedNullableSByte_Copy
        {
            get
            {
                if (!_WrappedNullableSByte_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WNullableSByte);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedNullableSByte_ByteIndex, _WrappedNullableSByte_ByteLength, false, true, null);
                        var toReturn = new WNullableSByte();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedNullableSByte;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2446*/
        protected WSByte _WrappedSByte;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WSByte WrappedSByte
        {
            get
            {
                if (!_WrappedSByte_Accessed)
                {
                    Lazinate_WrappedSByte();
                } 
                return _WrappedSByte;
            }
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _WrappedSByte = value;
                _WrappedSByte_Accessed = true;
            }
        }
        protected bool _WrappedSByte_Accessed;
        private void Lazinate_WrappedSByte()
        {
            if (LazinatorObjectBytes.Length == 0)
            {
                _WrappedSByte = default(WSByte);
                _WrappedSByte.LazinatorParents = new LazinatorParentsCollection(this);
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedSByte_ByteIndex, _WrappedSByte_ByteLength, false, true, 1);
                _WrappedSByte = new WSByte()
                {
                    LazinatorParents = new LazinatorParentsCollection(this)
                };
                _WrappedSByte.DeserializeLazinator(childData);
            }
            
            _WrappedSByte_Accessed = true;
        }
        
        /*Location2447*/[DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public WSByte WrappedSByte_Copy
        {
            get
            {
                if (!_WrappedSByte_Accessed)
                {
                    if (LazinatorObjectBytes.Length == 0)
                    {
                        return default(WSByte);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _WrappedSByte_ByteIndex, _WrappedSByte_ByteLength, false, true, 1);
                        var toReturn = new WSByte();
                        toReturn.DeserializeLazinator(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _WrappedSByte;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location2457*/
        /* Serialization, deserialization, and object relationships */
        
        public SmallWrappersContainer(LazinatorConstructorEnum constructorEnum)
        {
        }
        
        public SmallWrappersContainer(LazinatorMemory serializedBytes, ILazinator parent = null)
        {
            LazinatorParents = new LazinatorParentsCollection(parent);
            DeserializeLazinator(serializedBytes);
            HasChanged = false;
            DescendantHasChanged = false;
        }
        
        public virtual LazinatorParentsCollection LazinatorParents { get; set; }
        
        public virtual IncludeChildrenMode OriginalIncludeChildrenMode { get; set; }
        
        public virtual int Deserialize()
        {
            FreeInMemoryObjects();
            int bytesSoFar = 0;
            ReadOnlySpan<byte> span = LazinatorObjectBytes.Span;
            if (span.Length == 0)
            {
                return 0;
            }
            
            ReadGenericIDIfApplicable(ContainsOpenGenericParameters, LazinatorUniqueID, span, ref bytesSoFar);
            
            int lazinatorLibraryVersion = span.ToDecompressedInt(ref bytesSoFar);
            
            int serializedVersionNumber = span.ToDecompressedInt(ref bytesSoFar);
            
            OriginalIncludeChildrenMode = (IncludeChildrenMode)span.ToByte(ref bytesSoFar);
            
            ConvertFromBytesAfterHeader(OriginalIncludeChildrenMode, serializedVersionNumber, ref bytesSoFar);
            return bytesSoFar;
        }
        
        public virtual LazinatorMemory SerializeLazinator(IncludeChildrenMode includeChildrenMode, bool verifyCleanness, bool updateStoredBuffer) 
        {
            if (LazinatorMemoryStorage.IsEmpty || includeChildrenMode != OriginalIncludeChildrenMode || (verifyCleanness || IsDirty || (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && DescendantIsDirty)))
            {
                return EncodeToNewBuffer(includeChildrenMode, verifyCleanness, updateStoredBuffer);
            }
            BinaryBufferWriter writer = new BinaryBufferWriter(LazinatorMemoryStorage.Length);
            writer.Write(LazinatorMemoryStorage.Span);
            return writer.LazinatorMemory;
        }
        
        protected virtual LazinatorMemory EncodeToNewBuffer(IncludeChildrenMode includeChildrenMode, bool verifyCleanness, bool updateStoredBuffer) 
        {
            int bufferSize = LazinatorMemoryStorage.Length == 0 ? ExpandableBytes.DefaultMinBufferSize : LazinatorMemoryStorage.Length;
            BinaryBufferWriter writer = new BinaryBufferWriter(bufferSize);
            SerializeExistingBuffer(ref writer, includeChildrenMode, verifyCleanness, updateStoredBuffer);
            return writer.LazinatorMemory;
        }
        
        public virtual ILazinator CloneLazinator(IncludeChildrenMode includeChildrenMode = IncludeChildrenMode.IncludeAllChildren, CloneBufferOptions cloneBufferOptions = CloneBufferOptions.IndependentBuffers)
        {
            var clone = new SmallWrappersContainer(LazinatorConstructorEnum.LazinatorConstructor)
            {
                OriginalIncludeChildrenMode = includeChildrenMode
            };
            clone = CompleteClone(this, clone, includeChildrenMode, cloneBufferOptions);
            return clone;
        }
        
        public virtual ILazinator AssignCloneProperties(ILazinator clone, IncludeChildrenMode includeChildrenMode)
        {
            clone.FreeInMemoryObjects();
            SmallWrappersContainer typedClone = (SmallWrappersContainer) clone;
            /*Location2448*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                if (ListWrappedBytes == null)
                {
                    typedClone.ListWrappedBytes = null;
                }
                else
                {
                    typedClone.ListWrappedBytes = (LazinatorList<WByte>) ListWrappedBytes.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
                }
                
            }
            
            /*Location2449*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedBool = (WBool) WrappedBool.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2450*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedByte = (WByte) WrappedByte.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2451*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedChar = (WChar) WrappedChar.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2452*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedNullableBool = (WNullableBool) WrappedNullableBool.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2453*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedNullableByte = (WNullableByte) WrappedNullableByte.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2454*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedNullableChar = (WNullableChar) WrappedNullableChar.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2455*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedNullableSByte = (WNullableSByte) WrappedNullableSByte.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            /*Location2456*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.WrappedSByte = (WSByte) WrappedSByte.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer);
            }
            
            
            return typedClone;
        }
        
        public virtual bool HasChanged { get; set; }
        
        protected bool _IsDirty;
        public virtual bool IsDirty
        {
            [DebuggerStepThrough]
            get => _IsDirty|| LazinatorObjectBytes.Length == 0;
            [DebuggerStepThrough]
            set
            {
                if (_IsDirty != value)
                {
                    _IsDirty = value;
                    if (_IsDirty)
                    {
                        LazinatorParents.InformParentsOfDirtiness();
                        HasChanged = true;
                    }
                }
            }
        }
        
        protected bool _DescendantHasChanged;
        public virtual bool DescendantHasChanged
        {
            [DebuggerStepThrough]
            get => _DescendantHasChanged;
            [DebuggerStepThrough]
            set
            {
                _DescendantHasChanged = value;
            }
        }
        
        protected bool _DescendantIsDirty;
        public virtual bool DescendantIsDirty
        {
            [DebuggerStepThrough]
            get => _DescendantIsDirty;
            [DebuggerStepThrough]
            set
            {
                if (_DescendantIsDirty != value)
                {
                    _DescendantIsDirty = value;
                    if (_DescendantIsDirty)
                    {
                        LazinatorParents.InformParentsOfDirtiness();
                        _DescendantHasChanged = true;
                    }
                }
            }
        }
        
        public virtual void DeserializeLazinator(LazinatorMemory serializedBytes)
        {
            LazinatorMemoryStorage = serializedBytes;
            int length = Deserialize();
            if (length != LazinatorMemoryStorage.Length)
            {
                LazinatorMemoryStorage = LazinatorMemoryStorage.Slice(0, length);
            }
        }
        
        public virtual LazinatorMemory LazinatorMemoryStorage
        {
            get;
            set;
        }
        protected virtual ReadOnlyMemory<byte> LazinatorObjectBytes => LazinatorMemoryStorage.IsEmpty ? LazinatorMemory.EmptyReadOnlyMemory : LazinatorMemoryStorage.Memory;
        
        public virtual void UpdateStoredBuffer()
        {
            if (!IsDirty && !DescendantIsDirty && LazinatorObjectBytes.Length > 0 && OriginalIncludeChildrenMode == IncludeChildrenMode.IncludeAllChildren)
            {
                return;
            }
            var previousBuffer = LazinatorMemoryStorage;
            if (LazinatorMemoryStorage.IsEmpty || IncludeChildrenMode.IncludeAllChildren != OriginalIncludeChildrenMode || (IsDirty || DescendantIsDirty))
            {
                LazinatorMemoryStorage = EncodeToNewBuffer(IncludeChildrenMode.IncludeAllChildren, false, true);
            }
            else
            {
                BinaryBufferWriter writer = new BinaryBufferWriter(LazinatorMemoryStorage.Length);
                writer.Write(LazinatorMemoryStorage.Span);
                LazinatorMemoryStorage = writer.LazinatorMemory;
            }
            OriginalIncludeChildrenMode = IncludeChildrenMode.IncludeAllChildren;
            if (!LazinatorParents.Any())
            {
                previousBuffer.Dispose();
            }
        }
        
        public virtual int GetByteLength()
        {
            UpdateStoredBuffer();
            return LazinatorObjectBytes.Length;
        }
        
        public virtual bool NonBinaryHash32 => false;
        
        /*Location2458*/
        public IEnumerable<ILazinator> EnumerateLazinatorNodes(Func<ILazinator, bool> matchCriterion, bool stopExploringBelowMatch, Func<ILazinator, bool> exploreCriterion, bool exploreOnlyDeserializedChildren, bool enumerateNulls)
        {
            bool match = (matchCriterion == null) ? true : matchCriterion(this);
            bool explore = (!match || !stopExploringBelowMatch) && ((exploreCriterion == null) ? true : exploreCriterion(this));
            if (match)
            {
                yield return this;
            }
            if (explore)
            {
                foreach (var item in EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return item.descendant;
                }
            }
        }
        
        /*Location2459*/public virtual IEnumerable<(string propertyName, ILazinator descendant)> EnumerateLazinatorDescendants(Func<ILazinator, bool> matchCriterion, bool stopExploringBelowMatch, Func<ILazinator, bool> exploreCriterion, bool exploreOnlyDeserializedChildren, bool enumerateNulls)
        {
            /*Location2460*/if (enumerateNulls && (!exploreOnlyDeserializedChildren || _ListWrappedBytes_Accessed) && ListWrappedBytes == null)
            {
                yield return ("ListWrappedBytes", default);
            }
            else
            {
                if ((!exploreOnlyDeserializedChildren && ListWrappedBytes != null) || (_ListWrappedBytes_Accessed && _ListWrappedBytes != null))
                {
                    bool isMatch_ListWrappedBytes = matchCriterion == null || matchCriterion(ListWrappedBytes);
                    bool shouldExplore_ListWrappedBytes = exploreCriterion == null || exploreCriterion(ListWrappedBytes);
                    if (isMatch_ListWrappedBytes)
                    {
                        yield return ("ListWrappedBytes", ListWrappedBytes);
                    }
                    if ((!stopExploringBelowMatch || !isMatch_ListWrappedBytes) && shouldExplore_ListWrappedBytes)
                    {
                        foreach (var toYield in ListWrappedBytes.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                        {
                            yield return ("ListWrappedBytes" + "." + toYield.propertyName, toYield.descendant);
                        }
                    }
                }
                
            }
            
            /*Location2461*/bool isMatch_WrappedBool = matchCriterion == null || matchCriterion(WrappedBool);
            bool shouldExplore_WrappedBool = exploreCriterion == null || exploreCriterion(WrappedBool);
            if (isMatch_WrappedBool)
            {
                yield return ("WrappedBool", WrappedBool);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedBool) && shouldExplore_WrappedBool)
            {
                foreach (var toYield in WrappedBool.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedBool" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2462*/bool isMatch_WrappedByte = matchCriterion == null || matchCriterion(WrappedByte);
            bool shouldExplore_WrappedByte = exploreCriterion == null || exploreCriterion(WrappedByte);
            if (isMatch_WrappedByte)
            {
                yield return ("WrappedByte", WrappedByte);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedByte) && shouldExplore_WrappedByte)
            {
                foreach (var toYield in WrappedByte.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedByte" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2463*/bool isMatch_WrappedChar = matchCriterion == null || matchCriterion(WrappedChar);
            bool shouldExplore_WrappedChar = exploreCriterion == null || exploreCriterion(WrappedChar);
            if (isMatch_WrappedChar)
            {
                yield return ("WrappedChar", WrappedChar);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedChar) && shouldExplore_WrappedChar)
            {
                foreach (var toYield in WrappedChar.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedChar" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2464*/bool isMatch_WrappedNullableBool = matchCriterion == null || matchCriterion(WrappedNullableBool);
            bool shouldExplore_WrappedNullableBool = exploreCriterion == null || exploreCriterion(WrappedNullableBool);
            if (isMatch_WrappedNullableBool)
            {
                yield return ("WrappedNullableBool", WrappedNullableBool);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedNullableBool) && shouldExplore_WrappedNullableBool)
            {
                foreach (var toYield in WrappedNullableBool.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedNullableBool" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2465*/bool isMatch_WrappedNullableByte = matchCriterion == null || matchCriterion(WrappedNullableByte);
            bool shouldExplore_WrappedNullableByte = exploreCriterion == null || exploreCriterion(WrappedNullableByte);
            if (isMatch_WrappedNullableByte)
            {
                yield return ("WrappedNullableByte", WrappedNullableByte);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedNullableByte) && shouldExplore_WrappedNullableByte)
            {
                foreach (var toYield in WrappedNullableByte.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedNullableByte" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2466*/bool isMatch_WrappedNullableChar = matchCriterion == null || matchCriterion(WrappedNullableChar);
            bool shouldExplore_WrappedNullableChar = exploreCriterion == null || exploreCriterion(WrappedNullableChar);
            if (isMatch_WrappedNullableChar)
            {
                yield return ("WrappedNullableChar", WrappedNullableChar);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedNullableChar) && shouldExplore_WrappedNullableChar)
            {
                foreach (var toYield in WrappedNullableChar.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedNullableChar" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2467*/bool isMatch_WrappedNullableSByte = matchCriterion == null || matchCriterion(WrappedNullableSByte);
            bool shouldExplore_WrappedNullableSByte = exploreCriterion == null || exploreCriterion(WrappedNullableSByte);
            if (isMatch_WrappedNullableSByte)
            {
                yield return ("WrappedNullableSByte", WrappedNullableSByte);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedNullableSByte) && shouldExplore_WrappedNullableSByte)
            {
                foreach (var toYield in WrappedNullableSByte.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedNullableSByte" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2468*/bool isMatch_WrappedSByte = matchCriterion == null || matchCriterion(WrappedSByte);
            bool shouldExplore_WrappedSByte = exploreCriterion == null || exploreCriterion(WrappedSByte);
            if (isMatch_WrappedSByte)
            {
                yield return ("WrappedSByte", WrappedSByte);
            }
            if ((!stopExploringBelowMatch || !isMatch_WrappedSByte) && shouldExplore_WrappedSByte)
            {
                foreach (var toYield in WrappedSByte.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("WrappedSByte" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location2469*/yield break;
        }
        /*Location2470*/
        
        public virtual IEnumerable<(string propertyName, object descendant)> EnumerateNonLazinatorProperties()
        {
            /*Location2471*/yield break;
        }
        /*Location2472*/
        public virtual ILazinator ForEachLazinator(Func<ILazinator, ILazinator> changeFunc, bool exploreOnlyDeserializedChildren, bool changeThisLevel)
        {
            /*Location2473*/if ((!exploreOnlyDeserializedChildren && ListWrappedBytes != null) || (_ListWrappedBytes_Accessed && _ListWrappedBytes != null))
            {
                _ListWrappedBytes = (LazinatorList<WByte>) _ListWrappedBytes.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);
            }
            /*Location2474*/var deserialized_WrappedBool = WrappedBool;
            _WrappedBool = (WBool) _WrappedBool.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2475*/var deserialized_WrappedByte = WrappedByte;
            _WrappedByte = (WByte) _WrappedByte.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2476*/var deserialized_WrappedChar = WrappedChar;
            _WrappedChar = (WChar) _WrappedChar.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2477*/var deserialized_WrappedNullableBool = WrappedNullableBool;
            _WrappedNullableBool = (WNullableBool) _WrappedNullableBool.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2478*/var deserialized_WrappedNullableByte = WrappedNullableByte;
            _WrappedNullableByte = (WNullableByte) _WrappedNullableByte.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2479*/var deserialized_WrappedNullableChar = WrappedNullableChar;
            _WrappedNullableChar = (WNullableChar) _WrappedNullableChar.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2480*/var deserialized_WrappedNullableSByte = WrappedNullableSByte;
            _WrappedNullableSByte = (WNullableSByte) _WrappedNullableSByte.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2481*/var deserialized_WrappedSByte = WrappedSByte;
            _WrappedSByte = (WSByte) _WrappedSByte.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true);/*Location2482*/if (changeThisLevel && changeFunc != null)
            {
                return changeFunc(this);
            }
            return this;
        }
        /*Location2483*/
        public virtual void FreeInMemoryObjects()
        {
            _ListWrappedBytes = default;
            _WrappedBool = default;
            _WrappedByte = default;
            _WrappedChar = default;
            _WrappedNullableBool = default;
            _WrappedNullableByte = default;
            _WrappedNullableChar = default;
            _WrappedNullableSByte = default;
            _WrappedSByte = default;
            _ListWrappedBytes_Accessed = _WrappedBool_Accessed = _WrappedByte_Accessed = _WrappedChar_Accessed = _WrappedNullableBool_Accessed = _WrappedNullableByte_Accessed = _WrappedNullableChar_Accessed = _WrappedNullableSByte_Accessed = _WrappedSByte_Accessed = false;
            IsDirty = false;
            DescendantIsDirty = false;
            HasChanged = false;
            DescendantHasChanged = false;
        }
        /*Location2484*/
        /* Conversion */
        
        public virtual int LazinatorUniqueID => 1062;
        
        protected virtual bool ContainsOpenGenericParameters => false;
        public virtual LazinatorGenericIDType LazinatorGenericID => default;
        
        
        public virtual int LazinatorObjectVersion { get; set; } = 0;
        
        
        /*Location2485*/public virtual void ConvertFromBytesAfterHeader(IncludeChildrenMode includeChildrenMode, int serializedVersionNumber, ref int bytesSoFar)
        {
            ReadOnlySpan<byte> span = LazinatorObjectBytes.Span;
            /*Location2486*/_ListWrappedBytes_ByteIndex = bytesSoFar;
            if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                bytesSoFar = span.ToInt32(ref bytesSoFar) + bytesSoFar;
            }
            
            /*Location2487*/_WrappedBool_ByteIndex = bytesSoFar;
            bytesSoFar++;
            /*Location2488*/_WrappedByte_ByteIndex = bytesSoFar;
            bytesSoFar++;
            /*Location2489*/_WrappedChar_ByteIndex = bytesSoFar;
            bytesSoFar += 2;
            /*Location2490*/_WrappedNullableBool_ByteIndex = bytesSoFar;
            bytesSoFar++;
            /*Location2491*/_WrappedNullableByte_ByteIndex = bytesSoFar;
            if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                bytesSoFar = span.ToByte(ref bytesSoFar) + bytesSoFar;
            }
            
            /*Location2492*/_WrappedNullableChar_ByteIndex = bytesSoFar;
            if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                bytesSoFar = span.ToByte(ref bytesSoFar) + bytesSoFar;
            }
            
            /*Location2493*/_WrappedNullableSByte_ByteIndex = bytesSoFar;
            if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                bytesSoFar = span.ToByte(ref bytesSoFar) + bytesSoFar;
            }
            
            /*Location2494*/_WrappedSByte_ByteIndex = bytesSoFar;
            bytesSoFar++;
            /*Location2495*/_SmallWrappersContainer_EndByteIndex = bytesSoFar;
            /*Location2496*/        }
            
            /*Location2497*/public virtual void SerializeExistingBuffer(ref BinaryBufferWriter writer, IncludeChildrenMode includeChildrenMode, bool verifyCleanness, bool updateStoredBuffer)
            {
                /*Location2498*/if (includeChildrenMode != IncludeChildrenMode.IncludeAllChildren)
                {
                    updateStoredBuffer = false;
                }
                /*Location2499*/int startPosition = writer.Position;
                WritePropertiesIntoBuffer(ref writer, includeChildrenMode, verifyCleanness, updateStoredBuffer, true);
                /*Location2500*/if (updateStoredBuffer)
                {
                    UpdateStoredBuffer(ref writer, startPosition, writer.Position - startPosition, includeChildrenMode, false);
                    /*Location2501*/}
                    /*Location2502*/}
                    /*Location2503*/
                    public virtual void UpdateStoredBuffer(ref BinaryBufferWriter writer, int startPosition, int length, IncludeChildrenMode includeChildrenMode, bool updateDeserializedChildren)
                    {
                        /*Location2504*/_IsDirty = false;
                        if (includeChildrenMode == IncludeChildrenMode.IncludeAllChildren)
                        {
                            _DescendantIsDirty = false;/*Location2505*/
                            if (updateDeserializedChildren)
                            {
                                UpdateDeserializedChildren(ref writer, startPosition);
                                /*Location2506*/}
                                /*Location2507*/
                                _WrappedBool_Accessed = false;
                                _WrappedByte_Accessed = false;
                                _WrappedChar_Accessed = false;
                                _WrappedNullableBool_Accessed = false;
                                _WrappedNullableByte_Accessed = false;
                                _WrappedNullableChar_Accessed = false;
                                _WrappedNullableSByte_Accessed = false;
                                _WrappedSByte_Accessed = false;/*Location2508*/
                            }
                            else
                            {
                                ThrowHelper.ThrowCannotUpdateStoredBuffer();
                            }
                            /*Location2509*/
                            var newBuffer = writer.Slice(startPosition, length);
                            LazinatorMemoryStorage = newBuffer;
                            /*Location2510*/}
                            /*Location2511*/
                            protected virtual void UpdateDeserializedChildren(ref BinaryBufferWriter writer, int startPosition)
                            {
                                /*Location2512*/if (_ListWrappedBytes_Accessed && _ListWrappedBytes != null)
                                {
                                    ListWrappedBytes.UpdateStoredBuffer(ref writer, startPosition + _ListWrappedBytes_ByteIndex + sizeof(int), _ListWrappedBytes_ByteLength - sizeof(int), IncludeChildrenMode.IncludeAllChildren, true);
                                }
                                
                                /*Location2513*/WrappedBool.UpdateStoredBuffer(ref writer, startPosition + _WrappedBool_ByteIndex, _WrappedBool_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2514*/WrappedByte.UpdateStoredBuffer(ref writer, startPosition + _WrappedByte_ByteIndex, _WrappedByte_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2515*/WrappedChar.UpdateStoredBuffer(ref writer, startPosition + _WrappedChar_ByteIndex, _WrappedChar_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2516*/WrappedNullableBool.UpdateStoredBuffer(ref writer, startPosition + _WrappedNullableBool_ByteIndex, _WrappedNullableBool_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2517*/WrappedNullableByte.UpdateStoredBuffer(ref writer, startPosition + _WrappedNullableByte_ByteIndex + sizeof(byte), _WrappedNullableByte_ByteLength - sizeof(byte), IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2518*/WrappedNullableChar.UpdateStoredBuffer(ref writer, startPosition + _WrappedNullableChar_ByteIndex + sizeof(byte), _WrappedNullableChar_ByteLength - sizeof(byte), IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2519*/WrappedNullableSByte.UpdateStoredBuffer(ref writer, startPosition + _WrappedNullableSByte_ByteIndex + sizeof(byte), _WrappedNullableSByte_ByteLength - sizeof(byte), IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2520*/WrappedSByte.UpdateStoredBuffer(ref writer, startPosition + _WrappedSByte_ByteIndex, _WrappedSByte_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location2521*/}
                                
                                /*Location2522*/
                                protected virtual void WritePropertiesIntoBuffer(ref BinaryBufferWriter writer, IncludeChildrenMode includeChildrenMode, bool verifyCleanness, bool updateStoredBuffer, bool includeUniqueID)
                                {
                                    int startPosition = writer.Position;
                                    int startOfObjectPosition = 0;
                                    // header information
                                    /*Location2523*/if (includeUniqueID)
                                    {
                                        if (!ContainsOpenGenericParameters)
                                        {
                                            CompressedIntegralTypes.WriteCompressedInt(ref writer, LazinatorUniqueID);
                                        }
                                        else
                                        {
                                            WriteLazinatorGenericID(ref writer, LazinatorGenericID);
                                        }
                                    }
                                    /*Location2524*/CompressedIntegralTypes.WriteCompressedInt(ref writer, Lazinator.Support.LazinatorVersionInfo.LazinatorIntVersion);
                                    CompressedIntegralTypes.WriteCompressedInt(ref writer, LazinatorObjectVersion);
                                    writer.Write((byte)includeChildrenMode);
                                    /*Location2525*/// write properties
                                    /*Location2526*/startOfObjectPosition = writer.Position;
                                    /*Location2527*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_ListWrappedBytes_Accessed)
                                        {
                                            var deserialized = ListWrappedBytes;
                                        }
                                        WriteChild(ref writer, ref _ListWrappedBytes, includeChildrenMode, _ListWrappedBytes_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _ListWrappedBytes_ByteIndex, _ListWrappedBytes_ByteLength, false, false, null), verifyCleanness, updateStoredBuffer, false, false, this);
                                    }
                                    
                                    /*Location2528*/if (updateStoredBuffer)
                                    {
                                        _ListWrappedBytes_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2529*/startOfObjectPosition = writer.Position;
                                    /*Location2530*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedBool_Accessed)
                                        {
                                            var deserialized = WrappedBool;
                                        }
                                        WriteChild(ref writer, ref _WrappedBool, includeChildrenMode, _WrappedBool_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedBool_ByteIndex, _WrappedBool_ByteLength, false, true, 1), verifyCleanness, updateStoredBuffer, true, true, this);
                                    }
                                    
                                    /*Location2531*/if (updateStoredBuffer)
                                    {
                                        _WrappedBool_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2532*/startOfObjectPosition = writer.Position;
                                    /*Location2533*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedByte_Accessed)
                                        {
                                            var deserialized = WrappedByte;
                                        }
                                        WriteChild(ref writer, ref _WrappedByte, includeChildrenMode, _WrappedByte_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedByte_ByteIndex, _WrappedByte_ByteLength, false, true, 1), verifyCleanness, updateStoredBuffer, true, true, this);
                                    }
                                    
                                    /*Location2534*/if (updateStoredBuffer)
                                    {
                                        _WrappedByte_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2535*/startOfObjectPosition = writer.Position;
                                    /*Location2536*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedChar_Accessed)
                                        {
                                            var deserialized = WrappedChar;
                                        }
                                        WriteChild(ref writer, ref _WrappedChar, includeChildrenMode, _WrappedChar_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedChar_ByteIndex, _WrappedChar_ByteLength, false, true, 2), verifyCleanness, updateStoredBuffer, true, true, this);
                                    }
                                    
                                    /*Location2537*/if (updateStoredBuffer)
                                    {
                                        _WrappedChar_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2538*/startOfObjectPosition = writer.Position;
                                    /*Location2539*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedNullableBool_Accessed)
                                        {
                                            var deserialized = WrappedNullableBool;
                                        }
                                        WriteChild(ref writer, ref _WrappedNullableBool, includeChildrenMode, _WrappedNullableBool_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedNullableBool_ByteIndex, _WrappedNullableBool_ByteLength, false, true, 1), verifyCleanness, updateStoredBuffer, true, true, this);
                                    }
                                    
                                    /*Location2540*/if (updateStoredBuffer)
                                    {
                                        _WrappedNullableBool_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2541*/startOfObjectPosition = writer.Position;
                                    /*Location2542*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedNullableByte_Accessed)
                                        {
                                            var deserialized = WrappedNullableByte;
                                        }
                                        WriteChild(ref writer, ref _WrappedNullableByte, includeChildrenMode, _WrappedNullableByte_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedNullableByte_ByteIndex, _WrappedNullableByte_ByteLength, false, true, null), verifyCleanness, updateStoredBuffer, true, false, this);
                                    }
                                    
                                    /*Location2543*/if (updateStoredBuffer)
                                    {
                                        _WrappedNullableByte_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2544*/startOfObjectPosition = writer.Position;
                                    /*Location2545*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedNullableChar_Accessed)
                                        {
                                            var deserialized = WrappedNullableChar;
                                        }
                                        WriteChild(ref writer, ref _WrappedNullableChar, includeChildrenMode, _WrappedNullableChar_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedNullableChar_ByteIndex, _WrappedNullableChar_ByteLength, false, true, null), verifyCleanness, updateStoredBuffer, true, false, this);
                                    }
                                    
                                    /*Location2546*/if (updateStoredBuffer)
                                    {
                                        _WrappedNullableChar_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2547*/startOfObjectPosition = writer.Position;
                                    /*Location2548*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedNullableSByte_Accessed)
                                        {
                                            var deserialized = WrappedNullableSByte;
                                        }
                                        WriteChild(ref writer, ref _WrappedNullableSByte, includeChildrenMode, _WrappedNullableSByte_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedNullableSByte_ByteIndex, _WrappedNullableSByte_ByteLength, false, true, null), verifyCleanness, updateStoredBuffer, true, false, this);
                                    }
                                    
                                    /*Location2549*/if (updateStoredBuffer)
                                    {
                                        _WrappedNullableSByte_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2550*/startOfObjectPosition = writer.Position;
                                    /*Location2551*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((includeChildrenMode != IncludeChildrenMode.IncludeAllChildren || includeChildrenMode != OriginalIncludeChildrenMode) && !_WrappedSByte_Accessed)
                                        {
                                            var deserialized = WrappedSByte;
                                        }
                                        WriteChild(ref writer, ref _WrappedSByte, includeChildrenMode, _WrappedSByte_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _WrappedSByte_ByteIndex, _WrappedSByte_ByteLength, false, true, 1), verifyCleanness, updateStoredBuffer, true, true, this);
                                    }
                                    
                                    /*Location2552*/if (updateStoredBuffer)
                                    {
                                        _WrappedSByte_ByteIndex = startOfObjectPosition - startPosition;
                                    }
                                    /*Location2553*/if (updateStoredBuffer)
                                    {
                                        /*Location2554*/_SmallWrappersContainer_EndByteIndex = writer.Position - startPosition;
                                        /*Location2555*/}
                                        /*Location2556*/}
                                        /*Location2557*/
                                    }
                                }
