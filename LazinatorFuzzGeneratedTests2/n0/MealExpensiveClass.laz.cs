/*Location363*//*Location348*///440abcc3-2d30-c4c0-35c7-0cbd209ef653
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Lazinator tool, version 0.1.0.432, on 2024/01/01 12:00:00.000 AM.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace FuzzTests.n0
{
    #pragma warning disable 8019//Location349
    using Lazinator.Attributes;/*Location350*/
    using Lazinator.Buffers;/*Location351*/
    using Lazinator.Core;/*Location352*/
    using Lazinator.Exceptions;/*Location353*/
    using Lazinator.Support;/*Location354*/
    using static Lazinator.Buffers.WriteUncompressedPrimitives;/*Location355*/
    using System;/*Location356*/
    using System.Buffers;/*Location357*/
    using System.Collections.Generic;/*Location358*/
    using System.Diagnostics;/*Location359*/
    using System.IO;/*Location360*/
    using System.Linq;/*Location361*/
    using System.Runtime.InteropServices;/*Location362*/
    using static Lazinator.Core.LazinatorUtilities;
    #pragma warning restore 8019
    
    [Autogenerated]
    public partial class MealExpensiveClass : RefugeeSmartClass, ILazinator
    {
        /*Location364*//* Property definitions */
        
        /*Location365*/        protected int _ConnectionAttorney_ByteIndex;
        /*Location366*/        protected int _SharpSafety_ByteIndex;
        /*Location367*/protected virtual int _ConnectionAttorney_ByteLength => _SharpSafety_ByteIndex - _ConnectionAttorney_ByteIndex;
        /*Location368*/private int _MealExpensiveClass_EndByteIndex;
        /*Location369*/protected virtual  int _SharpSafety_ByteLength => _MealExpensiveClass_EndByteIndex - _SharpSafety_ByteIndex;
        /*Location370*/protected virtual int _OverallEndByteIndex => _MealExpensiveClass_EndByteIndex;
        
        /*Location371*/
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected long? _PopularExtremely;
        public long? PopularExtremely
        {
            [DebuggerStepThrough]
            get
            {
                return _PopularExtremely;
            }
            [DebuggerStepThrough]
            set
            {
                IsDirty = true;
                _PopularExtremely = value;
            }
        }
        /*Location372*/
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected RefugeeSmartClass _ConnectionAttorney;
        public RefugeeSmartClass ConnectionAttorney
        {
            [DebuggerStepThrough]
            get
            {
                
                return _ConnectionAttorney!;
            }
            [DebuggerStepThrough]
            set
            {
                _ = value ?? throw new ArgumentNullException(nameof(value));
                if (_ConnectionAttorney != null)
                {
                    _ConnectionAttorney.LazinatorParents = _ConnectionAttorney.LazinatorParents.WithRemoved(this);
                }
                value.LazinatorParents = value.LazinatorParents.WithAdded(this);
                
                IsDirty = true;
                DescendantIsDirty = true;
                _ConnectionAttorney = value;
            }
        }
        
        /*Location376*/
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected RemainingSubjectStruct _SharpSafety;
        public RemainingSubjectStruct SharpSafety
        {
            [DebuggerStepThrough]
            get
            {
                if (!_SharpSafety_Accessed)
                {
                    LazinateSharpSafety();
                } 
                return _SharpSafety;
            }
            [DebuggerStepThrough]
            set
            {
                value.LazinatorParents = new LazinatorParentsCollection(this);/*Location375*/
                
                IsDirty = true;
                DescendantIsDirty = true;
                _SharpSafety = value;
                _SharpSafety_Accessed = true;
            }
        }
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected bool _SharpSafety_Accessed;
        private void LazinateSharpSafety()
        {
            if (LazinatorMemoryStorage.Length == 0)
            {
                _SharpSafety = default(RemainingSubjectStruct);
                _SharpSafety.LazinatorParents = new LazinatorParentsCollection(this, null);/*Location373*/
            }
            else
            {
                LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _SharpSafety_ByteIndex, _SharpSafety_ByteLength, null);_SharpSafety = new RemainingSubjectStruct(childData)
                {
                    LazinatorParents = new LazinatorParentsCollection(this, null)/*Location374*/
                };
                
            }
            _SharpSafety_Accessed = true;
        }
        
        /*Location377*/public RemainingSubjectStruct SharpSafety_Copy
        {
            [DebuggerStepThrough]
            get
            {
                if (!_SharpSafety_Accessed)
                {
                    if (LazinatorMemoryStorage.Length == 0)
                    {
                        return default(RemainingSubjectStruct);
                    }
                    else
                    {
                        LazinatorMemory childData = GetChildSlice(LazinatorMemoryStorage, _SharpSafety_ByteIndex, _SharpSafety_ByteLength, null);
                        var toReturn = new RemainingSubjectStruct(childData);
                        toReturn.IsDirty = false;
                        return toReturn;
                    }
                }
                var cleanCopy = _SharpSafety;
                cleanCopy.IsDirty = false;
                cleanCopy.DescendantIsDirty = false;
                return cleanCopy;
            }
        }
        /*Location378*/// DEBUG5
        /*Location385*/        /* Clone overrides */
        
        public MealExpensiveClass(RefugeeSmartClass connectionAttorney, IncludeChildrenMode originalIncludeChildrenMode = IncludeChildrenMode.IncludeAllChildren) : base(originalIncludeChildrenMode)
        {
            _ConnectionAttorney = connectionAttorney;
            
            if (connectionAttorney == null)
            {
                throw new ArgumentNullException("connectionAttorney");
            }
        }
        
        public MealExpensiveClass(LazinatorMemory serializedBytes, ILazinator? parent = null, IncludeChildrenMode originalIncludeChildrenMode = IncludeChildrenMode.IncludeAllChildren, int? lazinatorObjectVersion = null) : base(serializedBytes, parent, originalIncludeChildrenMode, lazinatorObjectVersion)
        {LazinatorMemory childData;
            
            childData = GetChildSlice(LazinatorMemoryStorage, _ConnectionAttorney_ByteIndex, _ConnectionAttorney_ByteLength, null);
            _ConnectionAttorney = DeserializationFactory.Instance.CreateBaseOrDerivedType(10000, (c, p) => new RefugeeSmartClass(c, p), childData, this); 
        }
        
        public override ILazinator? CloneLazinator(IncludeChildrenMode includeChildrenMode = IncludeChildrenMode.IncludeAllChildren, CloneBufferOptions cloneBufferOptions = CloneBufferOptions.IndependentBuffers)
        {
            MealExpensiveClass clone;
            if (cloneBufferOptions == CloneBufferOptions.NoBuffer)
            {
                clone = new MealExpensiveClass(ConnectionAttorney, includeChildrenMode);
                clone.LazinatorObjectVersion = LazinatorObjectVersion;
                clone = (MealExpensiveClass)AssignCloneProperties(clone, includeChildrenMode)!;
            }
            else
            {
                LazinatorMemory bytes = EncodeOrRecycleToNewBuffer(includeChildrenMode, OriginalIncludeChildrenMode, IsDirty, DescendantIsDirty, false, LazinatorMemoryStorage, this);
                clone = new MealExpensiveClass(bytes);
            }
            return clone;
        }
        
        protected override ILazinator? AssignCloneProperties(ILazinator clone, IncludeChildrenMode includeChildrenMode)
        {
            base.AssignCloneProperties(clone, includeChildrenMode);
            MealExpensiveClass typedClone = (MealExpensiveClass) clone;
            /*Location380*/typedClone.PopularExtremely = PopularExtremely;/*Location379*/
            /*Location382*/typedClone.ConnectionAttorney = (RefugeeSmartClass) ConnectionAttorney.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer)!;/*Location381*/
            /*Location384*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                typedClone.SharpSafety = (RemainingSubjectStruct) SharpSafety.CloneLazinator(includeChildrenMode, CloneBufferOptions.NoBuffer)!;/*Location383*/
            }
            
            return typedClone;
        }
        
        /* Properties */
        /*Location386*/
        public override IEnumerable<(string propertyName, ILazinator? descendant)> EnumerateLazinatorDescendants(Func<ILazinator?, bool>? matchCriterion, bool stopExploringBelowMatch, Func<ILazinator?, bool>? exploreCriterion, bool exploreOnlyDeserializedChildren, bool enumerateNulls)
        {
            foreach (var inheritedYield in base.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
            {
                yield return inheritedYield;
            }
            /*Location387*/if (enumerateNulls && ConnectionAttorney == null)
            {
                yield return ("ConnectionAttorney", default);
            }
            else
            {
                bool isMatch_ConnectionAttorney = matchCriterion == null || matchCriterion(ConnectionAttorney);
                bool shouldExplore_ConnectionAttorney = exploreCriterion == null || exploreCriterion(ConnectionAttorney);
                if (isMatch_ConnectionAttorney)
                {
                    yield return ("ConnectionAttorney", ConnectionAttorney);
                }
                if ((!stopExploringBelowMatch || !isMatch_ConnectionAttorney) && shouldExplore_ConnectionAttorney)
                {
                    foreach (var toYield in ConnectionAttorney!.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                    {
                        yield return ("ConnectionAttorney" + "." + toYield.propertyName, toYield.descendant);
                    }
                }
            }
            /*Location388*/bool isMatch_SharpSafety = matchCriterion == null || matchCriterion(SharpSafety);
            bool shouldExplore_SharpSafety = exploreCriterion == null || exploreCriterion(SharpSafety);
            if (isMatch_SharpSafety)
            {
                yield return ("SharpSafety", SharpSafety);
            }
            if ((!stopExploringBelowMatch || !isMatch_SharpSafety) && shouldExplore_SharpSafety)
            {
                foreach (var toYield in SharpSafety!.EnumerateLazinatorDescendants(matchCriterion, stopExploringBelowMatch, exploreCriterion, exploreOnlyDeserializedChildren, enumerateNulls))
                {
                    yield return ("SharpSafety" + "." + toYield.propertyName, toYield.descendant);
                }
            }
            /*Location389*/yield break;
        }
        /*Location390*/
        
        public override IEnumerable<(string propertyName, object? descendant)> EnumerateNonLazinatorProperties()
        {
            foreach (var inheritedYield in base.EnumerateNonLazinatorProperties())
            {
                yield return inheritedYield;
            }
            /*Location391*/yield return ("PopularExtremely", (object?)PopularExtremely);
            /*Location392*/yield break;
        }
        /*Location393*/
        public override ILazinator? ForEachLazinator(Func<ILazinator?, ILazinator?>? changeFunc, bool exploreOnlyDeserializedChildren, bool changeThisLevel)
        {
            base.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, false);
            /*Location394*/_ConnectionAttorney = (RefugeeSmartClass) _ConnectionAttorney!.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true)!;
            /*Location395*/var deserialized_SharpSafety = SharpSafety;
            _SharpSafety = (RemainingSubjectStruct) _SharpSafety!.ForEachLazinator(changeFunc, exploreOnlyDeserializedChildren, true)!;
            /*Location396*/if (changeThisLevel && changeFunc != null)
            {
                return changeFunc(this);
            }
            return this;
        }
        /*Location397*/
        public override void FreeInMemoryObjects()
        {
            base.FreeInMemoryObjects();
            _SharpSafety = default;
            _SharpSafety_Accessed = false;
            IsDirty = false;
            DescendantIsDirty = false;
            HasChanged = false;
            DescendantHasChanged = false;
        }
        /*Location398*/
        /* Conversion */
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public override int LazinatorUniqueID => 10005;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected override bool ContainsOpenGenericParameters => false;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public override LazinatorGenericIDType LazinatorGenericID => default;
        
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public override int LazinatorObjectVersion { get; set; } = 0;
        
        
        /*Location399*/protected override int ConvertFromBytesAfterHeader(IncludeChildrenMode includeChildrenMode, int serializedVersionNumber, ref int bytesSoFar)
        {
            ReadOnlySpan<byte> span = LazinatorMemoryStorage.InitialReadOnlyMemory.Span;
            ConvertFromBytesForPrimitiveProperties(span, includeChildrenMode, serializedVersionNumber, ref bytesSoFar);
            int lengthForLengths = 4;
            if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
            {
                lengthForLengths += 4;
            }
            int totalChildrenSize = ConvertFromBytesForChildLengths(span, includeChildrenMode, serializedVersionNumber, bytesSoFar + lengthForLengths, ref bytesSoFar);
            return bytesSoFar + totalChildrenSize;
        }
        
        /*Location400*/protected override void ConvertFromBytesForPrimitiveProperties(ReadOnlySpan<byte> span, IncludeChildrenMode includeChildrenMode, int serializedVersionNumber, ref int bytesSoFar)
        {
            base.ConvertFromBytesForPrimitiveProperties(span, OriginalIncludeChildrenMode, serializedVersionNumber, ref bytesSoFar);
            /*Location401*/_PopularExtremely = span.ToDecompressedNullableInt64(ref bytesSoFar);
            /*Location402*/        }
            
            /*Location403*/protected override int ConvertFromBytesForChildLengths(ReadOnlySpan<byte> span, IncludeChildrenMode includeChildrenMode, int serializedVersionNumber, int indexOfFirstChild, ref int bytesSoFar)
            {
                int totalChildrenBytes = 0;
                totalChildrenBytes = base.ConvertFromBytesForChildLengths(span, OriginalIncludeChildrenMode, serializedVersionNumber, indexOfFirstChild, ref bytesSoFar);
                /*Location404*/_ConnectionAttorney_ByteIndex = indexOfFirstChild + totalChildrenBytes;
                /*Location405*/totalChildrenBytes += span.ToInt32(ref bytesSoFar);
                /*Location406*/_SharpSafety_ByteIndex = indexOfFirstChild + totalChildrenBytes;
                /*Location407*/if (includeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && includeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                {
                    totalChildrenBytes += span.ToInt32(ref bytesSoFar);
                }
                /*Location408*/_MealExpensiveClass_EndByteIndex = indexOfFirstChild + totalChildrenBytes;
                /*Location409*/return totalChildrenBytes;
            }
            
            /*Location410*/public override void SerializeToExistingBuffer(ref BufferWriter writer, in LazinatorSerializationOptions options)
            {
                /*Location411*/int startPosition = writer.ActiveMemoryPosition;
                WritePropertiesIntoBuffer(ref writer, options, true);
                /*Location412*/if (options.UpdateStoredBuffer)
                {
                    UpdateStoredBuffer(ref writer, startPosition, writer.ActiveMemoryPosition - startPosition, options.IncludeChildrenMode, false);
                    /*Location413*/}
                    /*Location414*/}
                    /*Location415*/
                    public override void UpdateStoredBuffer(ref BufferWriter writer, long startPosition, long length, IncludeChildrenMode includeChildrenMode, bool updateDeserializedChildren)
                    {
                        /*Location416*/_IsDirty = false;
                        if (includeChildrenMode == IncludeChildrenMode.IncludeAllChildren)
                        {
                            _DescendantIsDirty = false;/*Location417*/
                            if (updateDeserializedChildren)
                            {
                                UpdateDeserializedChildren(ref writer, startPosition);
                                /*Location418*/}
                                /*Location419*/
                                _SharpSafety_Accessed = false;/*Location420*/
                            }
                            else
                            {
                                ThrowHelper.ThrowCannotUpdateStoredBuffer();
                            }
                            /*Location421*/
                            var newBuffer = writer.Slice(startPosition, length);
                            LazinatorMemoryStorage = newBuffer;
                            /*Location422*/}
                            /*Location423*/
                            protected override void UpdateDeserializedChildren(ref BufferWriter writer, long startPosition)
                            {
                                base.UpdateDeserializedChildren(ref writer, startPosition);
                                /*Location424*/ConnectionAttorney!.UpdateStoredBuffer(ref writer, startPosition + _ConnectionAttorney_ByteIndex, _ConnectionAttorney_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location425*/SharpSafety!.UpdateStoredBuffer(ref writer, startPosition + _SharpSafety_ByteIndex, _SharpSafety_ByteLength, IncludeChildrenMode.IncludeAllChildren, true);
                                /*Location426*/
                            }
                            
                            /*Location427*/
                            protected override void WritePropertiesIntoBuffer(ref BufferWriter writer, in LazinatorSerializationOptions options, bool includeUniqueID)
                            {
                                int startPosition = writer.ActiveMemoryPosition;
                                /*Location428*/if (includeUniqueID)
                                {
                                    if (!ContainsOpenGenericParameters)
                                    {
                                        CompressedIntegralTypes.WriteCompressedInt(ref writer, LazinatorUniqueID);
                                    }
                                    else
                                    {
                                        WriteLazinatorGenericID(ref writer, LazinatorGenericID);
                                    }
                                }
                                /*Location429*/CompressedIntegralTypes.WriteCompressedInt(ref writer, Lazinator.Support.LazinatorVersionInfo.LazinatorIntVersion);
                                CompressedIntegralTypes.WriteCompressedInt(ref writer, LazinatorObjectVersion);
                                writer.Write((byte)options.IncludeChildrenMode);
                                /*Location430*/// write properties
                                /*Location431*/
                                WritePrimitivePropertiesIntoBuffer(ref writer, options, includeUniqueID);
                                int lengthForLengths = 4;
                                if (options.IncludeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && options.IncludeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                {
                                    lengthForLengths += 4;
                                }
                                
                                var previousLengthsPosition = writer.SetLengthsPosition(lengthForLengths);
                                WriteChildrenPropertiesIntoBuffer(ref writer, options, includeUniqueID, startPosition);
                                writer.ResetLengthsPosition(previousLengthsPosition);
                                /*Location432*//*Location433*/
                            }
                            /*Location434*/
                            protected override void WritePrimitivePropertiesIntoBuffer(ref BufferWriter writer, in LazinatorSerializationOptions options, bool includeUniqueID)
                            {
                                base.WritePrimitivePropertiesIntoBuffer(ref writer, options, includeUniqueID);
                                /*Location435*/CompressedIntegralTypes.WriteCompressedNullableLong(ref writer, _PopularExtremely);
                                /*Location436*/}/*Location437*//*Location438*/
                                protected override void WriteChildrenPropertiesIntoBuffer(ref BufferWriter writer, LazinatorSerializationOptions options, bool includeUniqueID, int startOfObjectPosition)
                                {
                                    base.WriteChildrenPropertiesIntoBuffer(ref writer, options, includeUniqueID, startOfObjectPosition);
                                    /*Location439*/if (options.SplittingPossible)
                                    {
                                        options = options.WithoutSplittingPossible();
                                    }
                                    /*Location440*/int startOfChildPosition = 0;
                                    /*Location441*/int lengthValue = 0;
                                    /*Location442*/startOfChildPosition = writer.ActiveMemoryPosition;
                                    /*Location443*/
                                    WriteChild(ref writer, ref _ConnectionAttorney!, options, true, () => GetChildSlice(LazinatorMemoryStorage, _ConnectionAttorney_ByteIndex, _ConnectionAttorney_ByteLength, null), this);
                                    lengthValue = writer.ActiveMemoryPosition - startOfChildPosition;
                                    if (lengthValue > int.MaxValue)
                                    {
                                        ThrowHelper.ThrowTooLargeException(int.MaxValue);
                                    }
                                    writer.RecordLength((int) lengthValue);
                                    /*Location444*/if (options.UpdateStoredBuffer)
                                    {
                                        _ConnectionAttorney_ByteIndex = startOfChildPosition - startOfObjectPosition;
                                        
                                    }
                                    /*Location445*/startOfChildPosition = writer.ActiveMemoryPosition;
                                    /*Location446*/if (options.IncludeChildrenMode != IncludeChildrenMode.ExcludeAllChildren && options.IncludeChildrenMode != IncludeChildrenMode.IncludeOnlyIncludableChildren)
                                    {
                                        if ((options.IncludeChildrenMode != IncludeChildrenMode.IncludeAllChildren || options.IncludeChildrenMode != OriginalIncludeChildrenMode) && !_SharpSafety_Accessed)
                                        {
                                            var deserialized = SharpSafety;
                                        }
                                        WriteChild(ref writer, ref _SharpSafety!, options, _SharpSafety_Accessed, () => GetChildSlice(LazinatorMemoryStorage, _SharpSafety_ByteIndex, _SharpSafety_ByteLength, null), this);
                                        lengthValue = writer.ActiveMemoryPosition - startOfChildPosition;
                                        if (lengthValue > int.MaxValue)
                                        {
                                            ThrowHelper.ThrowTooLargeException(int.MaxValue);
                                        }
                                        writer.RecordLength((int) lengthValue);
                                    }
                                    /*Location447*/if (options.UpdateStoredBuffer)
                                    {
                                        _SharpSafety_ByteIndex = startOfChildPosition - startOfObjectPosition;
                                        
                                    }
                                    /*Location448*/if (options.UpdateStoredBuffer)
                                    {
                                        /*Location449*/_MealExpensiveClass_EndByteIndex = writer.ActiveMemoryPosition - startOfObjectPosition;
                                        /*Location450*/}
                                        /*Location451*/
                                        /*Location452*/}/*Location453*//*Location454*/
                                    }
                                }
                                #nullable restore
