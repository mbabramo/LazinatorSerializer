namespace Lazinator.Collections
{
    public enum LazinatorCollectionUniqueIDs
    {
        ILazinatorOffsetList = 50, // leave room for other built-in types
        ILazinatorList,
        ILazinatorFastReadList,
        IWByte,
        IWDouble,
        IWFloat,
        IWGuid,
        IWInt,
        IWLong,
        IWNullableByte,
        IWNullableChar,
        IWNullableDateTime,
        IWNullableDecimal,
        IWNullableDouble,
        IWNullableFloat,
        IWNullableGuid,
        IWNullableInt,
        IWNullableLong,
        IWNullableSByte,
        IWNullableShort,
        ILazinatorNullableTimeSpan,
        IWNullableUint,
        IWNullableUlong,
        IWNullableUshort,
        IWReadOnlySpanChar,
        IWSByte,
        IWShort,
        IWString,
        IWTimeSpan,
        IWUint,
        IWUlong,
        IWUshort,
        IWDateTime,
        IWChar,
        IWDecimal,
        IWBool,
        IWNullableBool,
        IWAbstract,
        IWrapperNullableStruct,
        IPlaceholder,
        IByteSpan,
        IByteSpanUnofficial,
        ILazinatorBitArray,
        ILazinatorBitArrayUnofficial,
        ILazinatorTuple,
        ILazinatorTriple,
        ILazinatorQueue,
        ILazinatorStack,
        ILazinatorArray,
        IDictionaryBucket,
        IDictionary,
        IDictionaryUnofficial,
        IWDecimalArray,
        IWDoubleArray,
        IWFloatArray,
        IWIntArray,
        IWLongArray,
        IAvlList,
        ILazinatorFastReadListInt32,
        ILazinatorFastReadListInt16,
        ILazinatorListUnofficial,
        ILazinatorGeneralTree,
        ILazinatorGeneralTreeUnofficial,
        ILazinatorLocationAwareTree,
        ILazinatorSortedList,
        ILazinatorKeyValue,
        ICountableContainer,
        ILazinatorIndexable,
        ILazinatorUncountedListable,
        ILazinatorSorted,
        ILazinatorBranchable,
        ILazinatorKeyable,
        ILazinatorListable,
        ILazinatorTreeable,
        IAvlSortedList,
        IAvlSortedDictionary,
        ILazinatorKeyableMultivalue,
        IAvlDictionary,
        IStructWithBadHashFunction,
        ILazinatorLinkedListNode,
        ILazinatorLinkedList,
        ILazinatorSortedLinkedList,
        ILazinatorKeyableDictionary,
        ILazinatorKeyableMultivalueDictionary,
        IAvlSortedKeyValueTreeDictionary,
        INonComparableWrapper,
        INonComparableWrapperString,
        IIndexableValueContainer,
        IIndexableKeyValueTree,
        ILazinatorKeyMultivalueTree,
        IKeyValueContainer,
        ILazinatorSortedKeyMultivalueTree,
        ISortedKeyValueContainer,
        ILazinatorTree,
        ISortedMultivalueContainer,
        ISortedIndexableContainer,
        ISortedIndexableKeyValueContainer,
        ILazinatorSortedMultivalueTree,
        IAvlNode,
        IAvlTree,
        IAvlSortedTree,
        IAvlCountedNode,
        IAvlIndexableTree,
        IAvlSortedIndexableTree,
        IBinaryNode,
        IBinaryTree,
        ILazinatorDictionaryable,
        IAvlKeyValueTree,
        ILazinatorComparableKeyValue,
        IValueContainer,
        IMultivalueContainer,
        ISortedIndexableMultivalueContainer,
        IIndexableMultivalueContainer,
        IKeyMultivalueContainer,
        ISortedKeyMultivalueContainer,
        ISortedIndexableKeyMultivalueContainer,
        IIndexableKeyMultivalueContainer,
        ISortedValueContainer,
        IAvlSortedKeyValueTree,
        IAvlIndexableKeyValueTree,
        IAvlSortedIndexableKeyValueTree,
        ILazinatorMultivalueDictionaryable,
        IAvlWeightedNode,
        IAvlListTree,
        ILazinatorSortable,
        IContainerFactory,
        IContainerLevel,
        IContainerLocation,
        IIndexLocation,
        IAvlListTreeLocation,
        IAvlSortedListTree,
        IAvlAggregatedNode,
        IAvlAggregatedTree,
    }
}
