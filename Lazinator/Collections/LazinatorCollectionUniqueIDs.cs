namespace Lazinator.Collections
{
    public enum LazinatorCollectionUniqueIDs
    {
        ILazinatorOffsetList = 50, // leave room for other built-in types
        ILazinatorList,
        ILazinatorFastReadList,
        IWByte,
        IWDouble,
        IWFloat,
        IWGuid,
        IWInt,
        IWLong,
        IWNullableByte,
        IWNullableChar,
        IWNullableDateTime,
        IWNullableDecimal,
        IWNullableDouble,
        IWNullableFloat,
        IWNullableGuid,
        IWNullableInt,
        IWNullableLong,
        IWNullableSByte,
        IWNullableShort,
        ILazinatorNullableTimeSpan,
        IWNullableUint,
        IWNullableUlong,
        IWNullableUshort,
        IWReadOnlySpanChar,
        IWSByte,
        IWShort,
        IWString,
        IWTimeSpan,
        IWUint,
        IWUlong,
        IWUshort,
        IWDateTime,
        IWChar,
        IWDecimal,
        IWBool,
        IWNullableBool,
        IWAbstract,
        IWrapperNullableStruct,
        IPlaceholder,
        IByteSpan,
        IByteSpanUnofficial,
        ILazinatorBitArray,
        ILazinatorBitArrayUnofficial,
        IAvlNode,
        IAvlTree,
        ILazinatorTuple,
        ILazinatorTriple,
        ILazinatorQueue,
        ILazinatorStack,
        ILazinatorArray,
        IAvlMultiset,
        IAvlSet,
        IDictionaryBucket,
        IDictionary,
        IDictionaryUnofficial,
        IWDecimalArray,
        IWDoubleArray,
        IWFloatArray,
        IWIntArray,
        IWLongArray,
        IAvlList,
        ILazinatorFastReadListInt32,
        ILazinatorFastReadListInt16,
        ILazinatorListUnofficial,
        ILazinatorGeneralTree,
        ILazinatorGeneralTreeUnofficial,
        ILazinatorLocationAwareTree,
        ILazinatorBigListNode,
        IBigListContainer,
        IBigListLeafContainer,
        IBigListInteriorContainer,
        IBigList,
        IBigListTree,
        IAvlBigNodeTree,
        IAvlBigNodeContents,
        ISortedLazinatorList,
        ILazinatorKeyValue,
        ILazinatorCountable,
        ILazinatorIndexable,
        ILazinatorListable,
        IILazinatorSortable,
        ILazinatorBranchable,
        ILazinatorKeyable,
        ILazinatorOrderedKeyable,
        ILazinatorCountableListable,
        ILazinatorTreeable,
    }
}
